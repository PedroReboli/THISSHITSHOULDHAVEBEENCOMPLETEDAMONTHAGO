version: "3.3"
services:
  db:
    build:
      context: .
      dockerfile: ./Dockerfile.postgres
    shm_size: 8g
    container_name: postgres_gethold
    networks:
      - net
    volumes:
      - ./volumes/.postgres:/var/lib/postgresql/data/
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - PGPASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DB_RO_PASSWORD=${DB_RO_PASSWORD}
      - DB_RO_USER=${DB_RO_USER}

  api:
    build:
      context: .
      dockerfile: ./Dockerfile.api
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; server'
    container_name: org
    volumes:
      - ./.env:/org/.env
      - ./frontend/:/www/
    networks:
      - net
    expose:
      - 80
    depends_on:
      - db
    lables:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`${API_URI}`)"
      - "traefik.http.routers.fastapi.tls=true"
      - "traefik.http.routers.fastapi.tls.certresolver=letsencrypt"

  traefik:
    build:
      context: .
      dockerfile: Dockerfile.traefik
    container_name: traefik
    networks:
      - net
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_DASHBOARD_URI}`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${LE_USERNAME}:${LE_HASHED_PASSWORD}"
      - "traefik.http.middlewares.test-ratelimit.ratelimit.average=1"
      - "traefik.http.middlewares.test-ratelimit.ratelimit.burst=2"
    environment:
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL=${TRAEFIK_LE_EMAIL}

networks:
    net:
        driver: bridge
